
Iniciando projeto e novos pacotes adicionado

TelaLogin adicionado
Adicionando uma nova classe FormJFrame como nome de TelaLogin, configure e edite
o tamanho desejavel e adicione novas Labels Usuários e Senha, para usuário campo 
de texto, para senha campo de senha, adicione também botão e altere o texto para
login e altere também o nome da variável para btnLogin, cofigure também para cen
tralizar no centro e redimensionamento false e altere o title com nome desejado.

No projeto em bibliotecas vamos adicionar o Drive mysql, com o botão direito na 
biblioteca selecione Adicionar Biblioteca digite msql para procurar e adicione
Driver JDBC do Mysql... Instale também o Xampp ou Wampserver e mantém ele ligado
para podermos usar nossa localhost.


Camada de acesso Dados sigla dal
Agora vamos criar um nova classe com nome ModuloConexao, abaixo do package br...
vamos importar um conjunto de bibliotecas sql, depois de importado agora adicio
nar um método dentro da classe um método static que necessita de retorno, agora
adicionaremos novas váriaveis para ter acesso, depois de adicionando usaremos
o método try catch para resolver possiveis bugs no futuro, como a classe não 
tem um método main para podermos testar vamos chamar ela na classe TelaLogin
com novas váriaveis adicionada, não esqueça de adicionar as bibliotecas sql e
importar o pacote da classe ModuloConexao, agora fazeremos o teste de conexao
execute o projeto se tudo correr bem aparecera algo do tipo:
com.mysql.jdbc.JDBC4Connection@38aaaaa
Isso quer dizer que conexâo foi estabelecida, faça um teste simulando um erro
de não conexao com WampServer desligue ele e execute projeto observer ele mostra
ra null, mais podemos deixar isso mais explicável um erro demonstrado no console
para isso na classe ModuloConexao no método cath adicione um System.out.print(e)
e simule um erro desligando o banco de dados observe que ele detalhara o erro.

Vamos agora criar uma label aonde sera exibido a conexão do status se servidor
esta conectado ou não conectado, na nova label altere ao nome de status e altere
também o nome da variável, na lógica aonde está escrito status se servidor estti
ver conectado a string sera altereda para conectado, se não o oposto, lógica
usaremos a variável conexão, dizendo assim se conexão for diferente de null, va
riável lblStatus altere pra conectado, caso contrario else lblStatus altere pra
desconectado

Agora em vez de uma mensagem por que se não uma imagem de icone, em questão de 
design ficaria mais elegante, então vamos lá, em status com botão direito em 
propriedades selecione a opção icon, importe para o projeto, imagens baixada da
internet, dois icons, importe para pacotes icones, a palavra status pode ser 
retirada também, segue link para icones free 
https://www.iconfinder.com/search/?q=database&from=homepage&price=free
no código fonte TelaLogin comente aonde seta as palavras e adicione novo código
usando a mesma lógica, para fazer testes altere algum código da classe
ModuloConexao para ver se icone de desconectado está aparecendo

Agora criaremos um método logar na classe TelaLogin aonde sera vasculhado nome e
senha do usuário se corresponder o que o usuário digitar ele será logado em uma
outra tela, para organização dos nome de variáveis vamos alterar o nome da variável
caixa de texto para txtUsuario, campo de senha txtSenha, observe o código comentado
iremos preparar a consulta do banco de dados, depois iremos fazer a consulta do 
usuário se senha existe, para isso usaremos uma função if e else, a função else 
apenas dirá uma mensagem que usuario ou senha não confere, no pacote telas, vamos  
criar um Form JFrame com nome TelaPrincipal e iremos instanciar dentro do método 
logar aonde caso usuário e senha se confere diremos que janela sera verdadeira 
visible, para que isso seja executado vamos conferir o botão ao clicar ele vai 
conferir os dados digitado, em botão login click botão direito do  mouse em eventos 
action e ActionPerformed que adicionara método de acesso ao apertar o botão, basta 
apenas chamar no método logar dentro do método btnLoginActionPerformed, lembrando
que deve se existir o arquivo sql dbinfox2 não comentei no inicio mais no próximo
commit irei adicionar o arquivo sql, no arquivo mostra como se criar banco de dados
como selecionar o banco de dados, criar tabela, adicionar dados a tabela, mostrar
a tabela, mostrar usuarios e senhas

Para uma boa prática ao acessar a próxima tela repare que tela de login se mantém 
aberta, para pode fechar e depois de ter o acesso a tela principal adicione código 
this.dipose(); e logo abaixo ..setVisible(true); e também para fechar a conexão 
conexão.close(); agora em propriedade na classe TelaPrincipal vamos adicionar um 
título, em menu swing adicionar Barra de menu, alterar seus nomes, agora adicionar 
um submenu com um click botão direito do mouse em cima de umas das palavras do menu 
principal ir em Adicionar da Paleta Item de Menu e alterar seus nomes, você pode 
também a cada nome do submenu adicionar uma tecla de atalho, altere os nomes das 
variáveis, adicione Painel da Area de Trabalho, uma label nome, usuário e uma outra 
label importando uma imagem á ela mesma que será seu ícone


Ao inicializar a TelaPrincipal adicionaremos a data daquele dia, na TelaPrincipal
em qualquer lugar dela clique com o botão direito em Eventos>Windows>WindowActivade
evento adicionado vamos editar o evento, instanciaremos uma variável Data importando
a biblioteca util, depois diremos que lblData setara um texto que dentro do parametro 
data convertera para uma String, execute observe que ele mostra um resultado com 
todos detalhes da data, vamos formatar está data para apenas aparecer a data, para
isso usaremos o método DateFormat

Agora iremos editar a opção do submenu sair, em projeto clique em menu Opções e 
clique em sair para selecionar com botão direito , em eventos, action, ActionPer
formed, neste método adicionaremos uma variável inteira dizendo que ela é igual
JOptionPane..., dentro de uma estrutura de decisão se sair for comparado a opcão
JOptionPane.YES_NO_OPTION, diremos que essa estrutura será finalizada, código pra 
finalizar System.exit(0)

Editando o sobre, criaremos uma nova classe FormJFrame com nome TelaSobre dentro 
do pacote telas colocaremos três labels altereando seus textos e uma label 
adicionando um icone, importando para o pacote icones, importante colocar textos
dizendo sua licença, versão e no nome do desenvolvedor, após selecionando o sub
menu Opção com o botão direito em eventos>Action>ActionPermormed, evento adicionado
instanciaremos a TelaSobre dizendo pra ela ser vísivel verdadeiro, ao testar observe
que ao fechar no X ele fecha todo o programa, não queremos isso, por isso em propri
edade da TelaSobre em defaultCloseOperation selecione a opção dispose e irá resolver,
também configure as coisas básica centralizar a tela no meio e redimencionar false

Iremos agora desabilitar o submenu Usuário e menu Relátorios para usuários comuns,
apenas administradores poderão ter acesso á essa opção, selecione aonde deseja 
desabilitar em propriedades>código>Modificadores de Variáveis e selecione public static
e em Propriedades desetive enable, pronto apenas usuários Admin poderão ter acesso

Agora iremos focar um pouco também em Mysql, usamos o arquivo sql dbinfox2, descreva a
sua tabela de usuário com o comando describe, observe que temos apenas 5 colunas na 
tabela, adicionaremos mais uma com o nome de perfil, use o comando select * from tbusuario 
para ver os campo da tabela, usando mais um comando ainda não usado para adicionar novo campo
perfil a tabela, observe que antes tinha apenas 5 campo, agora teremos mais um , nesses campos 
vamos atualizar para que cada iduser receba o perfil de admin ou de user, admin acesso total
user acesso ilimitado, para poder mostrar qual usuário está acessando ao programa vamos também
deixar a váriavel lblUsuario como public>static, e a dentro da comparação da função "admin" 
diremos TelaPrincipal.lblUsuario.getText(rs.String(2)), aonde 2 seria o campos dos usuários
em else se coloca o mesmo código, caso queira mudar a cor código TelaPrincipal.lblUsuario.set
Foreground(Color.RED)

Agora iremos trabalhar a parte do JDesktoPane, aonde Form JInternalFrame será nosso usuário,
Form JInternalFrame não foi visto aqui ainda, para adicionar uma nova classe, botão direito
em br.com.infox.telas->Novo->->Outros>Categorias->Form Gui Swing>Tipo de Arquivos->Form JIn
ternalFrame, coloque nome de TelaUsuario, classe adicionada agora ir em TelaPrincipal no
subMenu usuario selecionar e clicar com o botão direito ir em Eventos->Action->ActionPerfor...
Instanciar a classe, deixar visible, altere o nome da variável JDesktopPane para usuario e
depois no evento, comando ainda não usado desktop.add(usuario); teste o programa a cada etapa,
ativando closable, iconifiable e maximizable para poder fechar, minimizar e maximizar a tela
de usuario, dentro da tela adicione labels e campos de texto pra cada item de acordo com o 
campo da seu banco de dados, apenas perfil que não usara campo de texto ele usara Caixa de 
Combinação também conhecida como ComboBox, edite o ComboBox adicionando os perfils criados
no caso admin e user, depois altere o nome da variáveis de cada item, vamos usar quatros
icones, create, read, update e delete, baixe pelo site iconfinder e depois adicione 4 botões
remove se o texto deixe um pouco de de espaço em preferredSize por exemplo se o ícone tem
64 pixels deixe o botão com 80 pixels. use o mesmo processo para adicionar um novo ícone
e impotar para o pacote ícones, em propiedades na opção toolTipText você pode adicionar um
texto ao passar a seta do mouse por cima texto será visualizado um texto, em cursor altere
para cursor em forma de mão pra quando a seta estiver em cima ele mudar, altere os nomes das 
variáveis dos ícones 

Trabalhando a classe TelaUsuario, importe as biblioteca sql e também a classe Modulo
Conexao que se encontra no pacote br.com.dal.ModuloConexao, iremos usar as mesmas
variáveis da classe TelaLogin, variáveis usadas Connection conexao, PrepareStatement
e ResultSet, Connection está ligado a classe ModuloConexao, PrepareStatement está
ligado ao framework sql e ResulTest nos trás os dados para ser visualizado, dentro
da classe já existe um construtor que nele existe um método initComponents, método
responsavel pela parte design da tela, abaixo dele vamos instancia a várivavel conexão
dizendo que ela é igual á ModuloConexao.conector();, criando um novo método void
consultar, diremos que nova variável String sql é igual a iduser, depois a dentro
de um try, pst é igual a váriavel conexao.preparedStatement(sql), selecionando usuário
do campo 1 e depois consultando com execute query, a dentro de uma função analizando
com rs.next se os dados de iduser coincidir, dados será inserido dependendo da variável
escolhida, exemplo txtUsuNome.setText(rs.getString(2)); campo 2 aonde se tem os nomes
e assim por diante com os outro dados, no combobox ainda não visto muda um pouco em 
vez de setText(); usa se setSelectedItem(); lembra dos botões adicionado? vamos usar
o botão consultar usando o evento ActionPerformed, dentro do evento chamar o método
e executar o programa para fazer os testes, depois de fazer os testes e funcionar
vamos para mais um detalhe caso cliente não exista vamos usar o else e vamos dar
uma mensagem "Cliente não cadastrado", ok, agora fazer limpar as caixas de textos
ao clicar em ok, txtUsuNome.setText(null); assim para os outros já para o combobox
so muda em vez de setText muda para setSelectedItem(null);

Adicionando Usuário novo, mostrando usuário adicionado e mensagem usuário não cadastrado

Na Classe TelaUsuario iremos adicionar um método novo, método adiciona responsavel 
por adicionar um novo usuário inexistente, método novo adicionado dentro dele 
adicionar variável String sql e dizer que ele é igual ao código de inserção de dados
descrito no código sql, não iremos inserir mais pelo workbench e sim inserir pela
interface gráfica da tela de usuário aonde apenas só usuários administradores 
teram acesso, apos adicionaremos o try catch pra futuros erros ele nos mostrarar na tela,
dentro do try diremos que pst(PrepareStatement)  é igual a conexeao.preparedStatement 
p minuscula (sql), abaixo diferente do método anterior que é consultar, iremos fazer
adicionar, para isso em vez de get usaramreos o set, faça isso com todos os itens
iduser, login, fone... apenas o combobox que é diferente ele usa o código getSelect
Item(); porém ele da um erro, pq teremos que converter para uma String basta apenas
pós colocar .toString();, agora usaremos o primeiro botão de adicionar icon adicionado
a TelaUsuario na propriedades dele, Evento>Action>ActionPermormed, chame o método dentro
dele, faça um teste, se ocorreu bem agora vamos adicionar uma mensagem que usuário foi
cadastrado para isso criaremos uma nova variável de nome adicionado do tipo inteiro, 
dizendo que se adicionado for maior que um, exiba a mensagem de Usuário Cadastrado com 
Sucesso, faça um teste após as mudanças, ao adicionar novo usuário queremos remover
os textos nos campos de textos para isso basta setar os textos para ficar null, faça
um teste com um novo usuário sem precisar preencher todos os campos, preencha apenas
nome e perfil, observe que nem um erro aparece, se você for até o arquivo sql e verificar
describe tbusuario observe que apenas Yes Null, quer dizer que apenas esse campo
não precisa ser preenchido, os demais é obrigatório o preenchimento, no banco de dados
entende que foi preenchido com algo vazio, mais para não acontecer vamos trabalhar
isso aqui no netBeans, no design adicione uma nova label * Campos Obrigatórios
em cada item de texto que for obrigatório adicione um *, exemplo * nome, *usuario..
usaremos uma outra função if else, abaixo da variável adicionado, se txtUsuId estiver
vazio me mostra a mensagem Campo "Preenchimento Obrigatório" se estiver preenchido
tire o fecha chave do else e adicione depois do if da função adicionado maior que zero
pra validar o preenchimento correto, faça um teste executando o programa sem preencher
o campo iduser observe que ele da um erro de Exception por estudos simulamos esse erro,
o erro surge por que no sql em iduser usamos auto_increment, criaremos uma outra tabela 
tbusuario_02, copie da mesma antiga só edite o iduser retirando auto_increment, agora 
sim podemos fazer a inserção no adicionar usuário sem dar ulgum tipo de erro, faça um
teste não preenchendo o campo id, depois de fazer os testes, adicione na função todos
os itens menos o item perfil

Alterando usuários já existentes

01 - Criando o método para alterar dados do usuário
02 - Adicionado o Try Catch para verificar futuros erros
03 - Mensagem de erro, casa haja algum
05 - Ao digitar nos campos dados ao ser alterados
06 - Código diferente por ser um combo Box, observe conversão com toString()
07 - Verificando os campos, casos estejam limpos ele retornaram aqui, por que existe 
     campos obrigatórios a ser preenchido
08 - Variável para alterar a estrutura de dados novas, no caso atualizando dados 
     novos inserido
09 - Função para caso dados sejam alterados com suceesso e depois limpando os campos
10 - Agora adicionaremos o evento para o botão alterar Action>ActionFerformed que 
     foi adicionado na linha 342, a dentro dele chame o método alterar

Removendo um usuário já existente

Removendo um unsuário já existente

01 - Método para remover
02 - Variável que recebe a mensagem se deseja confirmar ou não a remoção
03 - Função caso a resposta seja sim
04 - Caminho para remoção aonde á variável receba seus dados sql
05 - Um try e catch para te mostrar talvez alguns futuros bugs
06 - Preparando a conexao 
07 - selecionando o campo id
08 - Passando á uma variável a atualização da remoção
09 - Função atualizar se ele for maior que zero, execute a exclusão
10 - Após exclusão vai cair aqui para limpar os campos
11 - Agora usaremos o botão alterar em projeto, botão direito ir em  
     Evento>Action>ActionPerformed adicionado evento, chame o método remover

 

